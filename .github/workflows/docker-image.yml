name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3    
    - name: Login to Docker
      run: docker login -u ${{ secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD}} docker.io
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag deploy:latest
    - name: Check Docker Images
      run: docker images
    - name: Run Docker image
      run: |
        docker tag deploy:latest docker.io/${{ secrets.DOCKER_USERNAME }}/deploy:latest-release
        docker push docker.io/${{ secrets.DOCKER_USERNAME }}/deploy:latest-release
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v3    
    - name: Login to Docker
      run: docker login -u ${{ secrets.DOCKER_USERNAME}} -p ${{ secrets.DOCKER_PASSWORD}} docker.io
    - name: Pull Docker image
      run: docker pull praveenece443/deploy:latest-release
    - name: Run Application container
      run: docker run -d -p 8000:8000 --name deploy-container docker.io/${{ secrets.DOCKER_USERNAME }}/deploy:latest-release
    - name: Set Placeholder Secret
      run: echo "NGROK_URL=placeholder" >> $GITHUB_ENV
    - name: Update Secrets
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        REPO: ${{ github.repository }}
      run: |
        NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        ENCODED_URL=$(echo -n $NGROK_URL | base64)
        echo "NGROK_URL=$ENCODED_URL" >> $GITHUB_ENV
        echo "Updating secret NGROK_URL..."
        curl -X PUT \
          -H "Authorization: Bearer $GH_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/$REPO/actions/secrets/NGROK_URL" \
          -d "{\"encrypted_value\":\"$ENCODED_URL\",\"key_id\":\"$(curl -s -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github.v3+json" "https://api.github.com/repos/$REPO/actions/secrets/public-key" | jq -r '.key_id')\"}"
